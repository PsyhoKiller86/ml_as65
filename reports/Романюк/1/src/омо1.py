# -*- coding: utf-8 -*-
"""ОМО1.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1x80yU6JagwkYf-t26bQZMjaLP7d0jXSG

# Загрузка данных и просмотр первых строк
"""

import pandas as pd

url = "https://archive.ics.uci.edu/ml/machine-learning-databases/adult/adult.data"

df = pd.read_csv(url, header=None, engine="python")

df.columns = [
    "age", "workclass", "fnlwgt", "education", "education-num",
    "marital-status", "occupation", "relationship", "race", "sex",
    "capital-gain", "capital-loss", "hours-per-week", "native-country", "income"
]

print(df.head())

"""# Обработка пропусков в workclass"""

print(df['workclass'].value_counts())

most_common = df['workclass'].mode()[0]
print("Наиболее частое значение:", most_common)

df['workclass'] = df['workclass'].replace('?', most_common)

print(df['workclass'].value_counts())

"""# Количество мужчин и женщин + визуализация"""

import matplotlib.pyplot as plt

gender_counts = df['sex'].value_counts()
print(gender_counts)

gender_counts.plot(kind='bar', color=['skyblue', 'pink'])
plt.title("Количество мужчин и женщин")
plt.xlabel("Пол")
plt.ylabel("Количество")
plt.show()

"""# Преобразование race в числовой формат"""

# Вариант 1: factorize (каждой категории присвоится код)
df['race_encoded'] = pd.factorize(df['race'])[0]

print(df[['race', 'race_encoded']].head(10))

# Вариант 2: One-Hot Encoding
# df = pd.get_dummies(df, columns=['race'], drop_first=True)

"""# Гистограмма распределения возраста (age)"""

df = df.apply(lambda x: x.str.strip() if x.dtype == "object" else x)
import matplotlib.pyplot as plt

plt.figure(figsize=(8,5))

df[df['income'] == '<=50K']['age'].hist(bins=30, alpha=0.5, label='<=50K')
df[df['income'] == '>50K']['age'].hist(bins=30, alpha=0.5, label='>50K')

plt.legend()
plt.xlabel("Возраст")
plt.ylabel("Количество")
plt.title("Распределение возраста по группам дохода")
plt.show()

"""# Новый бинарный признак is_usa"""

df['is_usa'] = df['native-country'].apply(lambda x: 1 if x == 'United-States' else 0)
print(df[['native-country', 'is_usa']].head(10))